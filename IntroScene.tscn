[gd_scene load_steps=27 format=2]

[ext_resource path="res://Music and Sounds/Hurt.wav" type="AudioStream" id=1]
[ext_resource path="res://Music and Sounds/EnemyDie.wav" type="AudioStream" id=2]
[ext_resource path="res://World/GrassBackground.png" type="Texture" id=3]
[ext_resource path="res://Music and Sounds/Music.mp3" type="AudioStream" id=4]
[ext_resource path="res://UI/Hakubo.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://IntroScene.cs" type="Script" id=6]
[ext_resource path="res://UI/HealthUI.tscn" type="PackedScene" id=7]

[sub_resource type="VisualShaderNodeColorOp" id=1]
output_port_for_preview = 0
operator = 8

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorUniform" id=3]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeTextureUniform" id=4]
uniform_name = "TextureUniform2"
color_default = 1

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform sampler2D TextureUniform2 : hint_black;
uniform vec4 Color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// TextureUniform:8
	vec3 n_out8p0;
	float n_out8p1;
	{
		vec4 n_tex_read = texture(TextureUniform2, n_out3p0.xy);
		n_out8p0 = n_tex_read.rgb;
		n_out8p1 = n_tex_read.a;
	}

// ColorUniform:7
	vec3 n_out7p0 = Color.rgb;
	float n_out7p1 = Color.a;

// ColorOp:2
	vec3 n_out2p0;
	{
		float base = n_out8p0.x;
		float blend = n_out7p0.x;
		if (base < 0.5) {
			n_out2p0.x = (base * (2.0 * blend));
		} else {
			n_out2p0.x = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = n_out8p0.y;
		float blend = n_out7p0.y;
		if (base < 0.5) {
			n_out2p0.y = (base * (2.0 * blend));
		} else {
			n_out2p0.y = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = n_out8p0.z;
		float blend = n_out7p0.z;
		if (base < 0.5) {
			n_out2p0.z = (base * (2.0 * blend));
		} else {
			n_out2p0.z = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}

// Output:0
	COLOR.rgb = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -191, 303 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 220 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 340, 320 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -340, 220 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( -120, 440 )
nodes/fragment/8/node = SubResource( 4 )
nodes/fragment/8/position = Vector2( -40, 220 )
nodes/fragment/connections = PoolIntArray( 7, 0, 2, 1, 2, 0, 0, 0, 3, 0, 8, 0, 8, 0, 2, 0 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/Color = Color( 0.603922, 0.368627, 0.670588, 1 )
shader_param/TextureUniform2 = ExtResource( 3 )

[sub_resource type="Animation" id=7]
resource_name = "PlayDeath"
length = 1.3
tracks/0/type = "audio"
tracks/0/path = NodePath("AudioStreamPlayer")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 1 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 1 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 2 )
} ],
"times": PoolRealArray( 0, 0.1, 0.2 )
}

[sub_resource type="Animation" id=8]
resource_name = "PlayMusic"
length = 117.0
loop = true
tracks/0/type = "audio"
tracks/0/path = NodePath("AudioStreamPlayer")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 0 )
}

[sub_resource type="AnimationNodeAnimation" id=9]
animation = "PlayDeath"

[sub_resource type="AnimationNodeAnimation" id=10]
animation = "PlayMusic"

[sub_resource type="AnimationNodeStateMachineTransition" id=11]
switch_mode = 2
auto_advance = true

[sub_resource type="AnimationNodeStateMachineTransition" id=12]

[sub_resource type="AnimationNodeStateMachine" id=13]
states/PlayDeath/node = SubResource( 9 )
states/PlayDeath/position = Vector2( 550, 99 )
states/PlayMusic/node = SubResource( 10 )
states/PlayMusic/position = Vector2( 800, 99 )
transitions = [ "PlayDeath", "PlayMusic", SubResource( 11 ), "PlayMusic", "PlayDeath", SubResource( 12 ) ]

[sub_resource type="AnimationNodeStateMachinePlayback" id=14]

[sub_resource type="DynamicFontData" id=15]
font_path = "res://UI/Hakubo.ttf"

[sub_resource type="DynamicFont" id=16]
size = 18
use_filter = true
font_data = SubResource( 15 )

[sub_resource type="DynamicFont" id=17]
use_filter = true
font_data = ExtResource( 5 )

[sub_resource type="InputEventAction" id=18]
action = "ui_accept"

[sub_resource type="ShortCut" id=19]
shortcut = SubResource( 18 )

[node name="IntroScene" type="Node2D"]
script = ExtResource( 6 )

[node name="Background" type="Sprite" parent="."]
material = SubResource( 6 )
texture = ExtResource( 3 )
offset = Vector2( 160, 90 )
region_enabled = true
region_rect = Rect2( 0, 0, 352, 224 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/PlayDeath = SubResource( 7 )
anims/PlayMusic = SubResource( 8 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 13 )
anim_player = NodePath("../AnimationPlayer")
parameters/playback = SubResource( 14 )

[node name="Control" type="CenterContainer" parent="."]
margin_right = 320.0
margin_bottom = 160.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBox" type="VBoxContainer" parent="Control"]
margin_left = 122.0
margin_top = 27.0
margin_right = 197.0
margin_bottom = 133.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer4" type="HBoxContainer" parent="Control/VBox"]
margin_right = 75.0
margin_bottom = 63.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="lbGameOver" type="Label" parent="Control/VBox/HBoxContainer4"]
margin_right = 75.0
margin_bottom = 63.0
rect_pivot_offset = Vector2( 168, 56 )
custom_fonts/font = SubResource( 16 )
text = "Keyboard:
[J]= attack
[K]= roll"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer3" type="HBoxContainer" parent="Control/VBox"]
margin_top = 67.0
margin_right = 75.0
margin_bottom = 79.0

[node name="HealthUI" parent="Control/VBox/HBoxContainer3" instance=ExtResource( 7 )]
margin_right = 0.0
rect_min_size = Vector2( 0, 12 )

[node name="HBoxBtn" type="HBoxContainer" parent="Control/VBox"]
margin_top = 83.0
margin_right = 75.0
margin_bottom = 106.0
alignment = 1

[node name="Button" type="Button" parent="Control/VBox/HBoxBtn"]
margin_left = 15.0
margin_right = 60.0
margin_bottom = 23.0
custom_fonts/font = SubResource( 17 )
shortcut_in_tooltip = false
shortcut = SubResource( 19 )
text = "start"

[connection signal="pressed" from="Control/VBox/HBoxBtn/Button" to="." method="OnRestartPressed"]
